// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		010EF63B169FCA0B0030902B /* AMTNSURLConnectionMock.m in Sources */ = {isa = PBXBuildFile; fileRef = 010EF63A169FCA0B0030902B /* AMTNSURLConnectionMock.m */; };
		010EF63E169FCA260030902B /* AMTNSURLConnectionMockCore.m in Sources */ = {isa = PBXBuildFile; fileRef = 010EF63D169FCA260030902B /* AMTNSURLConnectionMockCore.m */; };
		010EF641169FD26F0030902B /* AMTNSURLConnectionMockTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 010EF640169FD26F0030902B /* AMTNSURLConnectionMockTests.m */; };
		01333650169E74EA00237051 /* AMTSecondTestClass.m in Sources */ = {isa = PBXBuildFile; fileRef = 0133364F169E74EA00237051 /* AMTSecondTestClass.m */; };
		019577F816937A7F00EB06C5 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 019577F716937A7F00EB06C5 /* Foundation.framework */; };
		019577FD16937A7F00EB06C5 /* AdditionalMockingTools.h in CopyFiles */ = {isa = PBXBuildFile; fileRef = 019577FC16937A7F00EB06C5 /* AdditionalMockingTools.h */; };
		0195780716937A7F00EB06C5 /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 0195780616937A7F00EB06C5 /* SenTestingKit.framework */; };
		0195780916937A7F00EB06C5 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 0195780816937A7F00EB06C5 /* UIKit.framework */; };
		0195780A16937A7F00EB06C5 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 019577F716937A7F00EB06C5 /* Foundation.framework */; };
		0195780D16937A7F00EB06C5 /* libAdditionalMockingTools.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 019577F416937A7F00EB06C5 /* libAdditionalMockingTools.a */; };
		0195781316937A7F00EB06C5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 0195781116937A7F00EB06C5 /* InfoPlist.strings */; };
		0195781616937A7F00EB06C5 /* AMTClassMockTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 0195781516937A7F00EB06C5 /* AMTClassMockTests.m */; };
		019578211693D6AF00EB06C5 /* AMTTestClass.m in Sources */ = {isa = PBXBuildFile; fileRef = 019578201693D6AF00EB06C5 /* AMTTestClass.m */; };
		019578241693D82200EB06C5 /* AMTClassMock.m in Sources */ = {isa = PBXBuildFile; fileRef = 019578231693D82200EB06C5 /* AMTClassMock.m */; };
		019578271693E22B00EB06C5 /* AMTClassMockCore.m in Sources */ = {isa = PBXBuildFile; fileRef = 019578261693E22B00EB06C5 /* AMTClassMockCore.m */; };
		55831A9316D9470A0089D7D3 /* AdditionalMockingTools.h in Headers */ = {isa = PBXBuildFile; fileRef = 019577FC16937A7F00EB06C5 /* AdditionalMockingTools.h */; settings = {ATTRIBUTES = (Public, ); }; };
		55831A9416D9470A0089D7D3 /* AMTClassMockCore.h in Headers */ = {isa = PBXBuildFile; fileRef = 019578251693E22B00EB06C5 /* AMTClassMockCore.h */; settings = {ATTRIBUTES = (Public, ); }; };
		55831A9516D9470A0089D7D3 /* AMTClassMock.h in Headers */ = {isa = PBXBuildFile; fileRef = 019578221693D82200EB06C5 /* AMTClassMock.h */; settings = {ATTRIBUTES = (Public, ); }; };
		55831A9616D9470A0089D7D3 /* AMTNSURLConnectionMockCore.h in Headers */ = {isa = PBXBuildFile; fileRef = 010EF63C169FCA260030902B /* AMTNSURLConnectionMockCore.h */; settings = {ATTRIBUTES = (Public, ); }; };
		55831A9716D9470A0089D7D3 /* AMTNSURLConnectionMock.h in Headers */ = {isa = PBXBuildFile; fileRef = 010EF639169FCA0B0030902B /* AMTNSURLConnectionMock.h */; settings = {ATTRIBUTES = (Public, ); }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		0195780B16937A7F00EB06C5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 019577EB16937A7F00EB06C5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 019577F316937A7F00EB06C5;
			remoteInfo = AdditionalMockingTools;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		019577F216937A7F00EB06C5 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "include/${PRODUCT_NAME}";
			dstSubfolderSpec = 16;
			files = (
				019577FD16937A7F00EB06C5 /* AdditionalMockingTools.h in CopyFiles */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		010EF639169FCA0B0030902B /* AMTNSURLConnectionMock.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTNSURLConnectionMock.h; sourceTree = "<group>"; };
		010EF63A169FCA0B0030902B /* AMTNSURLConnectionMock.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTNSURLConnectionMock.m; sourceTree = "<group>"; };
		010EF63C169FCA260030902B /* AMTNSURLConnectionMockCore.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTNSURLConnectionMockCore.h; sourceTree = "<group>"; };
		010EF63D169FCA260030902B /* AMTNSURLConnectionMockCore.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTNSURLConnectionMockCore.m; sourceTree = "<group>"; };
		010EF63F169FD26F0030902B /* AMTNSURLConnectionMockTests.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTNSURLConnectionMockTests.h; sourceTree = "<group>"; };
		010EF640169FD26F0030902B /* AMTNSURLConnectionMockTests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTNSURLConnectionMockTests.m; sourceTree = "<group>"; };
		0133364E169E74EA00237051 /* AMTSecondTestClass.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTSecondTestClass.h; sourceTree = "<group>"; };
		0133364F169E74EA00237051 /* AMTSecondTestClass.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTSecondTestClass.m; sourceTree = "<group>"; };
		019577F416937A7F00EB06C5 /* libAdditionalMockingTools.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libAdditionalMockingTools.a; sourceTree = BUILT_PRODUCTS_DIR; };
		019577F716937A7F00EB06C5 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		019577FB16937A7F00EB06C5 /* AdditionalMockingTools-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "AdditionalMockingTools-Prefix.pch"; sourceTree = "<group>"; };
		019577FC16937A7F00EB06C5 /* AdditionalMockingTools.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AdditionalMockingTools.h; sourceTree = "<group>"; };
		0195780516937A7F00EB06C5 /* AdditionalMockingToolsTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = AdditionalMockingToolsTests.octest; sourceTree = BUILT_PRODUCTS_DIR; };
		0195780616937A7F00EB06C5 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		0195780816937A7F00EB06C5 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		0195781016937A7F00EB06C5 /* AdditionalMockingToolsTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "AdditionalMockingToolsTests-Info.plist"; sourceTree = "<group>"; };
		0195781216937A7F00EB06C5 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		0195781416937A7F00EB06C5 /* AMTClassMockTests.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AMTClassMockTests.h; sourceTree = "<group>"; };
		0195781516937A7F00EB06C5 /* AMTClassMockTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AMTClassMockTests.m; sourceTree = "<group>"; };
		0195781F1693D6AF00EB06C5 /* AMTTestClass.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTTestClass.h; sourceTree = "<group>"; };
		019578201693D6AF00EB06C5 /* AMTTestClass.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTTestClass.m; sourceTree = "<group>"; };
		019578221693D82200EB06C5 /* AMTClassMock.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTClassMock.h; sourceTree = "<group>"; };
		019578231693D82200EB06C5 /* AMTClassMock.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTClassMock.m; sourceTree = "<group>"; };
		019578251693E22B00EB06C5 /* AMTClassMockCore.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AMTClassMockCore.h; sourceTree = "<group>"; };
		019578261693E22B00EB06C5 /* AMTClassMockCore.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AMTClassMockCore.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		019577F116937A7F00EB06C5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				019577F816937A7F00EB06C5 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0195780116937A7F00EB06C5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0195780716937A7F00EB06C5 /* SenTestingKit.framework in Frameworks */,
				0195780916937A7F00EB06C5 /* UIKit.framework in Frameworks */,
				0195780A16937A7F00EB06C5 /* Foundation.framework in Frameworks */,
				0195780D16937A7F00EB06C5 /* libAdditionalMockingTools.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		01333651169E905500237051 /* DummyTestClasses */ = {
			isa = PBXGroup;
			children = (
				0195781F1693D6AF00EB06C5 /* AMTTestClass.h */,
				019578201693D6AF00EB06C5 /* AMTTestClass.m */,
				0133364E169E74EA00237051 /* AMTSecondTestClass.h */,
				0133364F169E74EA00237051 /* AMTSecondTestClass.m */,
			);
			name = DummyTestClasses;
			sourceTree = "<group>";
		};
		01333652169E906800237051 /* Tests */ = {
			isa = PBXGroup;
			children = (
				0195781416937A7F00EB06C5 /* AMTClassMockTests.h */,
				0195781516937A7F00EB06C5 /* AMTClassMockTests.m */,
				010EF63F169FD26F0030902B /* AMTNSURLConnectionMockTests.h */,
				010EF640169FD26F0030902B /* AMTNSURLConnectionMockTests.m */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
		01333653169E907500237051 /* Mocking */ = {
			isa = PBXGroup;
			children = (
				019578251693E22B00EB06C5 /* AMTClassMockCore.h */,
				019578261693E22B00EB06C5 /* AMTClassMockCore.m */,
				019578221693D82200EB06C5 /* AMTClassMock.h */,
				019578231693D82200EB06C5 /* AMTClassMock.m */,
			);
			name = Mocking;
			sourceTree = "<group>";
		};
		01333654169E908000237051 /* Blocks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Blocks;
			sourceTree = "<group>";
		};
		01333655169E908600237051 /* NSURLConnection */ = {
			isa = PBXGroup;
			children = (
				010EF63C169FCA260030902B /* AMTNSURLConnectionMockCore.h */,
				010EF63D169FCA260030902B /* AMTNSURLConnectionMockCore.m */,
				010EF639169FCA0B0030902B /* AMTNSURLConnectionMock.h */,
				010EF63A169FCA0B0030902B /* AMTNSURLConnectionMock.m */,
			);
			name = NSURLConnection;
			sourceTree = "<group>";
		};
		019577E916937A7F00EB06C5 = {
			isa = PBXGroup;
			children = (
				019577F916937A7F00EB06C5 /* AdditionalMockingTools */,
				0195780E16937A7F00EB06C5 /* AdditionalMockingToolsTests */,
				019577F616937A7F00EB06C5 /* Frameworks */,
				019577F516937A7F00EB06C5 /* Products */,
			);
			sourceTree = "<group>";
		};
		019577F516937A7F00EB06C5 /* Products */ = {
			isa = PBXGroup;
			children = (
				019577F416937A7F00EB06C5 /* libAdditionalMockingTools.a */,
				0195780516937A7F00EB06C5 /* AdditionalMockingToolsTests.octest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		019577F616937A7F00EB06C5 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				019577F716937A7F00EB06C5 /* Foundation.framework */,
				0195780616937A7F00EB06C5 /* SenTestingKit.framework */,
				0195780816937A7F00EB06C5 /* UIKit.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		019577F916937A7F00EB06C5 /* AdditionalMockingTools */ = {
			isa = PBXGroup;
			children = (
				019577FC16937A7F00EB06C5 /* AdditionalMockingTools.h */,
				01333653169E907500237051 /* Mocking */,
				01333655169E908600237051 /* NSURLConnection */,
				019577FA16937A7F00EB06C5 /* Supporting Files */,
				01333654169E908000237051 /* Blocks */,
			);
			path = AdditionalMockingTools;
			sourceTree = "<group>";
		};
		019577FA16937A7F00EB06C5 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				019577FB16937A7F00EB06C5 /* AdditionalMockingTools-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		0195780E16937A7F00EB06C5 /* AdditionalMockingToolsTests */ = {
			isa = PBXGroup;
			children = (
				01333652169E906800237051 /* Tests */,
				01333651169E905500237051 /* DummyTestClasses */,
				0195780F16937A7F00EB06C5 /* Supporting Files */,
			);
			path = AdditionalMockingToolsTests;
			sourceTree = "<group>";
		};
		0195780F16937A7F00EB06C5 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				0195781016937A7F00EB06C5 /* AdditionalMockingToolsTests-Info.plist */,
				0195781116937A7F00EB06C5 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		55831A9216D946E80089D7D3 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				55831A9316D9470A0089D7D3 /* AdditionalMockingTools.h in Headers */,
				55831A9416D9470A0089D7D3 /* AMTClassMockCore.h in Headers */,
				55831A9516D9470A0089D7D3 /* AMTClassMock.h in Headers */,
				55831A9616D9470A0089D7D3 /* AMTNSURLConnectionMockCore.h in Headers */,
				55831A9716D9470A0089D7D3 /* AMTNSURLConnectionMock.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		019577F316937A7F00EB06C5 /* AdditionalMockingTools */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0195781916937A7F00EB06C5 /* Build configuration list for PBXNativeTarget "AdditionalMockingTools" */;
			buildPhases = (
				019577F016937A7F00EB06C5 /* Sources */,
				019577F116937A7F00EB06C5 /* Frameworks */,
				019577F216937A7F00EB06C5 /* CopyFiles */,
				55831A9016D944A60089D7D3 /* ShellScript */,
				55831A9216D946E80089D7D3 /* Headers */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = AdditionalMockingTools;
			productName = AdditionalMockingTools;
			productReference = 019577F416937A7F00EB06C5 /* libAdditionalMockingTools.a */;
			productType = "com.apple.product-type.library.static";
		};
		0195780416937A7F00EB06C5 /* AdditionalMockingToolsTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0195781C16937A7F00EB06C5 /* Build configuration list for PBXNativeTarget "AdditionalMockingToolsTests" */;
			buildPhases = (
				0195780016937A7F00EB06C5 /* Sources */,
				0195780116937A7F00EB06C5 /* Frameworks */,
				0195780216937A7F00EB06C5 /* Resources */,
				0195780316937A7F00EB06C5 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				0195780C16937A7F00EB06C5 /* PBXTargetDependency */,
			);
			name = AdditionalMockingToolsTests;
			productName = AdditionalMockingToolsTests;
			productReference = 0195780516937A7F00EB06C5 /* AdditionalMockingToolsTests.octest */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		019577EB16937A7F00EB06C5 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				CLASSPREFIX = AMT;
				LastUpgradeCheck = 0450;
				ORGANIZATIONNAME = "Nick Kremer";
			};
			buildConfigurationList = 019577EE16937A7F00EB06C5 /* Build configuration list for PBXProject "AdditionalMockingTools" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 019577E916937A7F00EB06C5;
			productRefGroup = 019577F516937A7F00EB06C5 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				019577F316937A7F00EB06C5 /* AdditionalMockingTools */,
				0195780416937A7F00EB06C5 /* AdditionalMockingToolsTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		0195780216937A7F00EB06C5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0195781316937A7F00EB06C5 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		0195780316937A7F00EB06C5 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
		};
		55831A9016D944A60089D7D3 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#\n# c.f. StackOverflow question/answer here: http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4\n#\n# Version 2.5\n#\n# Latest Change:\n# - The \"copy headers\" section now respects the build setting for the location of the public headers\n#\n# Purpose:\n#   Create a static library for iPhone from within XCode\n#   Because Apple staff DELIBERATELY broke Xcode to make this impossible from the GUI (Xcode 3.2.3 specifically states this in the Release notes!)\n#   ...no, I don't understand why they did this!\n#\n# Author: Adam Martin - http://twitter.com/redglassesapps\n# Based on: original script from Eonil (main changes: Eonil's script WILL NOT WORK in Xcode GUI - it WILL CRASH YOUR COMPUTER)\n#\n\nset -e\nset -o pipefail\n\n#################[ Tests: helps workaround any future bugs in Xcode ]########\n#\nDEBUG_THIS_SCRIPT=\"false\"\n\nif [ $DEBUG_THIS_SCRIPT = \"true\" ]\nthen\necho \"########### TESTS #############\"\necho \"Use the following variables when debugging this script; note that they may change on recursions\"\necho \"BUILD_DIR = $BUILD_DIR\"\necho \"BUILD_ROOT = $BUILD_ROOT\"\necho \"CONFIGURATION_BUILD_DIR = $CONFIGURATION_BUILD_DIR\"\necho \"BUILT_PRODUCTS_DIR = $BUILT_PRODUCTS_DIR\"\necho \"CONFIGURATION_TEMP_DIR = $CONFIGURATION_TEMP_DIR\"\necho \"TARGET_BUILD_DIR = $TARGET_BUILD_DIR\"\nfi\n\n#####################[ part 1 ]##################\n# First, work out the BASESDK version number (NB: Apple ought to report this, but they hide it)\n#    (incidental: searching for substrings in sh is a nightmare! Sob)\n\nSDK_VERSION=$(echo ${SDK_NAME} | grep -o '.\\{3\\}$')\n\n# Next, work out if we're in SIM or DEVICE\n\nif [ ${PLATFORM_NAME} = \"iphonesimulator\" ]\nthen\nOTHER_SDK_TO_BUILD=iphoneos${SDK_VERSION}\nelse\nOTHER_SDK_TO_BUILD=iphonesimulator${SDK_VERSION}\nfi\n\necho \"XCode has selected SDK: ${PLATFORM_NAME} with version: ${SDK_VERSION} (although back-targetting: ${IPHONEOS_DEPLOYMENT_TARGET})\"\necho \"...therefore, OTHER_SDK_TO_BUILD = ${OTHER_SDK_TO_BUILD}\"\n#\n#####################[ end of part 1 ]##################\n\n#####################[ part 2 ]##################\n#\n# IF this is the original invocation, invoke WHATEVER other builds are required\n#\n# Xcode is already building ONE target...\n#\n# ...but this is a LIBRARY, so Apple is wrong to set it to build just one.\n# ...we need to build ALL targets\n# ...we MUST NOT re-build the target that is ALREADY being built: Xcode WILL CRASH YOUR COMPUTER if you try this (infinite recursion!)\n#\n#\n# So: build ONLY the missing platforms/configurations.\n\nif [ \"true\" == ${ALREADYINVOKED:-false} ]\nthen\necho \"RECURSION: I am NOT the root invocation, so I'm NOT going to recurse\"\nelse\n# CRITICAL:\n# Prevent infinite recursion (Xcode sucks)\nexport ALREADYINVOKED=\"true\"\n\necho \"RECURSION: I am the root ... recursing all missing build targets NOW...\"\necho \"RECURSION: ...about to invoke: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -project \\\"${PROJECT_NAME}.xcodeproj\\\" -target \\\"${TARGET_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO\" BUILD_DIR=\\\"${BUILD_DIR}\\\" BUILD_ROOT=\\\"${BUILD_ROOT}\\\" SYMROOT=\\\"${SYMROOT}\\\"\n\nxcodebuild -configuration \"${CONFIGURATION}\" -project \"${PROJECT_NAME}.xcodeproj\" -target \"${TARGET_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" SYMROOT=\"${SYMROOT}\"\n\nACTION=\"build\"\n\n#Merge all platform binaries as a fat binary for each configurations.\n\n# Calculate where the (multiple) built files are coming from:\nCURRENTCONFIG_DEVICE_DIR=${SYMROOT}/${CONFIGURATION}-iphoneos\nCURRENTCONFIG_SIMULATOR_DIR=${SYMROOT}/${CONFIGURATION}-iphonesimulator\n\necho \"Taking device build from: ${CURRENTCONFIG_DEVICE_DIR}\"\necho \"Taking simulator build from: ${CURRENTCONFIG_SIMULATOR_DIR}\"\n\nCREATING_UNIVERSAL_DIR=${SRCROOT}/${CONFIGURATION}-universal-library\necho \"...I will output a universal build to: ${CREATING_UNIVERSAL_DIR}\"\n\n# ... remove the products of previous runs of this script\n#      NB: this directory is ONLY created by this script - it should be safe to delete!\n\nrm -rf \"${CREATING_UNIVERSAL_DIR}\"\nmkdir \"${CREATING_UNIVERSAL_DIR}\"\n\n#\necho \"lipo: for current configuration (${CONFIGURATION}) creating output file: ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\"\nlipo -create -output \"${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_DEVICE_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_SIMULATOR_DIR}/${EXECUTABLE_NAME}\"\n\n#########\n#\n# Added: StackOverflow suggestion to also copy \"include\" files\n#    (untested, but should work OK)\n#\necho \"Fetching headers from ${PUBLIC_HEADERS_FOLDER_PATH}\"\nif [ -d \"${CURRENTCONFIG_DEVICE_DIR}${PUBLIC_HEADERS_FOLDER_PATH}\" ]\nthen\nmkdir -p \"${CREATING_UNIVERSAL_DIR}${PUBLIC_HEADERS_FOLDER_PATH}\"\n# * needs to be outside the double quotes?\ncp -r \"${CURRENTCONFIG_DEVICE_DIR}${PUBLIC_HEADERS_FOLDER_PATH}\"* \"${CREATING_UNIVERSAL_DIR}\"\nfi\nfi";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		019577F016937A7F00EB06C5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				019578241693D82200EB06C5 /* AMTClassMock.m in Sources */,
				019578271693E22B00EB06C5 /* AMTClassMockCore.m in Sources */,
				010EF63B169FCA0B0030902B /* AMTNSURLConnectionMock.m in Sources */,
				010EF63E169FCA260030902B /* AMTNSURLConnectionMockCore.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0195780016937A7F00EB06C5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0195781616937A7F00EB06C5 /* AMTClassMockTests.m in Sources */,
				019578211693D6AF00EB06C5 /* AMTTestClass.m in Sources */,
				01333650169E74EA00237051 /* AMTSecondTestClass.m in Sources */,
				010EF641169FD26F0030902B /* AMTNSURLConnectionMockTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		0195780C16937A7F00EB06C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 019577F316937A7F00EB06C5 /* AdditionalMockingTools */;
			targetProxy = 0195780B16937A7F00EB06C5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		0195781116937A7F00EB06C5 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				0195781216937A7F00EB06C5 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		0195781716937A7F00EB06C5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.0;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				VALID_ARCHS = "armv7 armv7s i386";
			};
			name = Debug;
		};
		0195781816937A7F00EB06C5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.0;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
				VALID_ARCHS = "armv7 armv7s i386";
			};
			name = Release;
		};
		0195781A16937A7F00EB06C5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/AdditionalMockingTools.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "AdditionalMockingTools/AdditionalMockingTools-Prefix.pch";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PUBLIC_HEADERS_FOLDER_PATH = /AdditionalMockingToolsHeaders;
				SKIP_INSTALL = YES;
			};
			name = Debug;
		};
		0195781B16937A7F00EB06C5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/AdditionalMockingTools.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "AdditionalMockingTools/AdditionalMockingTools-Prefix.pch";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PUBLIC_HEADERS_FOLDER_PATH = /AdditionalMockingToolsHeaders;
				SKIP_INSTALL = YES;
			};
			name = Release;
		};
		0195781D16937A7F00EB06C5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "AdditionalMockingTools/AdditionalMockingTools-Prefix.pch";
				INFOPLIST_FILE = "AdditionalMockingToolsTests/AdditionalMockingToolsTests-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Debug;
		};
		0195781E16937A7F00EB06C5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "AdditionalMockingTools/AdditionalMockingTools-Prefix.pch";
				INFOPLIST_FILE = "AdditionalMockingToolsTests/AdditionalMockingToolsTests-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		019577EE16937A7F00EB06C5 /* Build configuration list for PBXProject "AdditionalMockingTools" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0195781716937A7F00EB06C5 /* Debug */,
				0195781816937A7F00EB06C5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		0195781916937A7F00EB06C5 /* Build configuration list for PBXNativeTarget "AdditionalMockingTools" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0195781A16937A7F00EB06C5 /* Debug */,
				0195781B16937A7F00EB06C5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		0195781C16937A7F00EB06C5 /* Build configuration list for PBXNativeTarget "AdditionalMockingToolsTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0195781D16937A7F00EB06C5 /* Debug */,
				0195781E16937A7F00EB06C5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 019577EB16937A7F00EB06C5 /* Project object */;
}
